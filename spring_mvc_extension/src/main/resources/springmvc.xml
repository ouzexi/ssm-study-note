<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描控制层组件-->
    <context:component-scan base-package="com.atguigu"></context:component-scan>
    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver"
          class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--物理视图(/WEB-INF/templates/index.html)去掉前缀和后缀就是逻辑视图-->
                        <!--逻辑视图(index)加上前缀和后缀就是真正要访问的页面路径-->
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <mvc:default-servlet-handler/>

    <!--开启mvc的注解驱动-->
    <mvc:annotation-driven/>
    <!--配置视图控制器-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <!--配置文件上传解析器-->
    <!--id必须为multipartResolver才能解析到-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </bean>

    <!--配置拦截器-->
<!--    <mvc:interceptors>-->
        <!--bean和ref标签所配置的拦截器默认对DispatchServlet处理的所有的请求进行拦截-->
        <!--<bean class="com.atguigu.interceptor.FirstInterceptor"/>-->
        <!--<ref bean="firstInterceptor"/>
        <ref bean="secondInterceptor"/>-->
        <!--<mvc:interceptor>
            &lt;!&ndash;mvc:mapping需要拦截的请求路径&ndash;&gt;
            &lt;!&ndash;/*表示上下文路径只有一层的请求,比如/a、/xxx,但/a/b这种多层的请求不会被拦截&ndash;&gt;
            &lt;!&ndash;/**表示任意层级的请求即所有请求&ndash;&gt;
            <mvc:mapping path="/**"/>
            &lt;!&ndash;mvc:exclude-mapping配置需要排除拦截的请求路径&ndash;&gt;
            &lt;!&ndash;发送的请求是/abc不会被拦截器拦截&ndash;&gt;
            <mvc:exclude-mapping path="/abc"/>
            &lt;!&ndash;配置拦截器&ndash;&gt;
            <ref bean="firstInterceptor"/>
        </mvc:interceptor>-->



<!--    </mvc:interceptors>-->

    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            &lt;!&ndash;exceptionMappings属性的类型为Properties，所以用<props>标签赋值&ndash;&gt;
            <props>
                &lt;!&ndash;key设置要处理的异常如算数异常ArithmeticException,标签中的值设置出现该异常时跳转页面对应的逻辑视图如error&ndash;&gt;
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        &lt;!&ndash;设置共享在请求域中的异常信息的属性名(在页面可以通过value属性的值比如ex获取到异常信息)&ndash;&gt;
        <property name="exceptionAttribute" value="ex"></property>
    </bean>-->
    
</beans>